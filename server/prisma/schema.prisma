generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  phone String
  photoId String?
  photoUrl String?
  photoFilename String?
  password String
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  connections Connection[]
  @@map("users")
}

model Connection{
  id String @id @default(uuid())
  phone String
  name String?
  photo String?
  isUser Boolean
  userOwnId String
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  user User @relation(fields: [userId], references: [id])
  userId String

  conversation Conversation? @relation("ConnectionConversation", fields: [conversationId], references: [id])
  conversationId String?

  messages Messege[]

  @@map("connections")

}

model Conversation {
  id String @id @default(uuid())
  userOne String
  userTwo String
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  messege Messege[]
  conversation Connection[] @relation("ConnectionConversation")

  @@map("conversations")
}

model Messege {
  id String @id @default(uuid())
  messegeText String
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  conversation Conversation @relation(fields: [conversationId], references: [id])
  conversationId String

  connection Connection @relation(fields: [connectionId], references: [id])
  connectionId String

  @@map("messeges")
}