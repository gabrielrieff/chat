generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  phone String
  photoId String?
  photoUrl String?
  photoFilename String?
  password String
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  connections Connection[]

  connectionUser Connection[] @relation("ConnectionUser")

  user1 Conversation[] @relation("ConversationUser1")
  user2 Conversation[] @relation("ConversationUser2")

  messages Message[] @relation("MessageUser")

  @@map("users")
}

model Connection{
  id String @id @default(uuid())
  phone String
  name String?
  photo String?
  is_user Boolean
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  user User @relation(fields: [userId], references: [id])
  userId String

  connectionUser User? @relation("ConnectionUser", fields: [id_user_contact], references: [id])
  id_user_contact String?

  conversation Conversation? @relation("ConnectionConversation", fields: [conversationId], references: [id])
  conversationId String?

  @@map("connections")

}

model Conversation {
  id String @id @default(uuid())
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  user1 User @relation("ConversationUser1", fields: [id_user_one], references: [id])
  id_user_one String

  user2 User @relation("ConversationUser2", fields: [id_user_two], references: [id])
  id_user_two String

  messege Message[]
  conversation Connection[] @relation("ConnectionConversation")
  @@map("conversations")
}

model Message {
  id String @id @default(uuid())
  messegeText String
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  user    User   @relation("MessageUser", fields: [user_id], references: [id])
  user_id  String

  conversation Conversation @relation(fields: [conversationId], references: [id])
  conversationId String

  @@map("messeges")
}